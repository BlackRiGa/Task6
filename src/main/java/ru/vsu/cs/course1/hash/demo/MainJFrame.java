package main.java.ru.vsu.cs.course1.hash.demo;

import java.awt.HeadlessException;
import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import main.java.ru.vsu.cs.util.SwingUtils;
import static main.java.ru.vsu.cs.course1.hash.demo.TariffsSHM.EMPTY;
import static main.java.ru.vsu.cs.course1.hash.demo.TariffsSHM.ERROR_IN_SECONDS;
import static main.java.ru.vsu.cs.course1.hash.demo.TariffsSHM.ERROR_NOT_SAVE;
import static main.java.ru.vsu.cs.course1.hash.demo.TariffsSHM.ERROR_NO_DATA;
import static main.java.ru.vsu.cs.course1.hash.demo.TariffsSHM.ERROR_NO_PREFIX;
import static main.java. ru.vsu.cs.course1.hash.demo.TariffsSHM.FINAL_MESSAGE;
import static main.java.ru.vsu.cs.course1.hash.demo.TariffsSHM.PARAGRAPH;

public class MainJFrame extends javax.swing.JFrame {
    private JFileChooser openJFileChooser = null;
    private JFileChooser saveJFileChooser = null;
    
    private TariffsSHM tariffsSHM;
    private Tariffs tariffs;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        
        openJFileChooser = new JFileChooser();
        saveJFileChooser = new JFileChooser();
        openJFileChooser.setCurrentDirectory(new File("C:\\Users\\ilja-\\IdeaProjects\\Task 6(1)"));
        saveJFileChooser.setCurrentDirectory(new File("CC:\\Users\\ilja-\\IdeaProjects\\Task 6(1)"));
        FileFilter filterTxt = new FileNameExtensionFilter("Text files", "txt");
        FileFilter filterCsv = new FileNameExtensionFilter("Csv files", "csv");
        openJFileChooser.addChoosableFileFilter(filterTxt);
        saveJFileChooser.addChoosableFileFilter(filterTxt);
        openJFileChooser.addChoosableFileFilter(filterCsv);
        saveJFileChooser.addChoosableFileFilter(filterCsv);
        
        saveJFileChooser.setAcceptAllFileFilterUsed(false);
        saveJFileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
        saveJFileChooser.setApproveButtonText("Save");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonCountUsingSimpleHashMap = new javax.swing.JButton();
        jTextFieldFileUploadPath = new javax.swing.JTextField();
        jButtonSaveInFile = new javax.swing.JButton();
        jButtonChoseFile = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaOutputTheData = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldOutput = new javax.swing.JTextField();
        jTextFieldPhoneNumber = new javax.swing.JTextField();
        jTextFieldNumberOfSeconds = new javax.swing.JTextField();
        jTextFieldCostResult = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonLoadDataUsingSimpleHashMap = new javax.swing.JButton();
        jButtonWithdrawDataUsingSimpleHashMap = new javax.swing.JButton();
        jButtonLoadData = new javax.swing.JButton();
        jButtonWithdrawData = new javax.swing.JButton();
        jButtonCount = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldKey = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jButtonChange = new javax.swing.JButton();
        jButtonAddUsingSHM = new javax.swing.JButton();
        jButtonRemoveUsingSHM = new javax.swing.JButton();
        jButtonChangeUsingSHM = new javax.swing.JButton();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldCost = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonCountUsingSimpleHashMap.setText("Count and display");
        jButtonCountUsingSimpleHashMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCountUsingSimpleHashMapActionPerformed(evt);
            }
        });

        jTextFieldFileUploadPath.setEditable(false);
        jTextFieldFileUploadPath.setText("Input file location");

        jButtonSaveInFile.setText("Save in file");
        jButtonSaveInFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveInFileActionPerformed(evt);
            }
        });

        jButtonChoseFile.setText("Choose file");
        jButtonChoseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChoseFileActionPerformed(evt);
            }
        });

        jTextAreaOutputTheData.setColumns(20);
        jTextAreaOutputTheData.setRows(5);
        jScrollPane3.setViewportView(jTextAreaOutputTheData);

        jLabel1.setText("Avaliable data");

        jTextFieldOutput.setEditable(false);
        jTextFieldOutput.setText("Output file location");

        jTextFieldCostResult.setEditable(false);
        jTextFieldCostResult.setText("Result");

        jLabel2.setText("Duration of the conversation");

        jLabel3.setText("Number");

        jButtonLoadDataUsingSimpleHashMap.setText("Load data");
        jButtonLoadDataUsingSimpleHashMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadDataUsingSimpleHashMapActionPerformed(evt);
            }
        });

        jButtonWithdrawDataUsingSimpleHashMap.setText("Withdraw data");
        jButtonWithdrawDataUsingSimpleHashMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWithdrawDataUsingSimpleHashMapActionPerformed(evt);
            }
        });

        jButtonLoadData.setText("Load data");
        jButtonLoadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadDataActionPerformed(evt);
            }
        });

        jButtonWithdrawData.setText("Withdraw data");
        jButtonWithdrawData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWithdrawDataActionPerformed(evt);
            }
        });

        jButtonCount.setText("Count and display");
        jButtonCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCountActionPerformed(evt);
            }
        });

        jLabel4.setText("HashMap");

        jLabel5.setText("SimpleHashMap");

        jButtonAdd.setText("Add record");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonRemove.setText("Remove record");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jButtonChange.setText("Change record");
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        jButtonAddUsingSHM.setText("Add record");
        jButtonAddUsingSHM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUsingSHMActionPerformed(evt);
            }
        });

        jButtonRemoveUsingSHM.setText("Remove record");
        jButtonRemoveUsingSHM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveUsingSHMActionPerformed(evt);
            }
        });

        jButtonChangeUsingSHM.setText("Change record");
        jButtonChangeUsingSHM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeUsingSHMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonChoseFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFileUploadPath))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSaveInFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldOutput))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNumberOfSeconds))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPhoneNumber))
                            .addComponent(jTextFieldCostResult, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonCount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonLoadData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                    .addComponent(jButtonWithdrawData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonWithdrawDataUsingSimpleHashMap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonLoadDataUsingSimpleHashMap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonCountUsingSimpleHashMap, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jTextFieldKey)
                            .addComponent(jTextFieldName)
                            .addComponent(jTextFieldCost)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonRemove, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonRemoveUsingSHM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonAddUsingSHM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonChangeUsingSHM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonChoseFile)
                    .addComponent(jTextFieldFileUploadPath, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonLoadDataUsingSimpleHashMap)
                            .addComponent(jButtonLoadData))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonWithdrawDataUsingSimpleHashMap)
                            .addComponent(jButtonWithdrawData))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCountUsingSimpleHashMap)
                            .addComponent(jButtonCount))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldNumberOfSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldCostResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAdd)
                            .addComponent(jButtonAddUsingSHM))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRemove)
                            .addComponent(jButtonRemoveUsingSHM))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonChange, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonChangeUsingSHM, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSaveInFile)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jTextFieldOutput)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCountUsingSimpleHashMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCountUsingSimpleHashMapActionPerformed
        MainJFrame.jTextFieldCostResult.setText(EMPTY);
        try {
            int seconds = Integer.parseInt(MainJFrame.jTextFieldNumberOfSeconds.getText());
            String number = MainJFrame.jTextFieldPhoneNumber.getText();
            int result = tariffsSHM.calculateCostUsingSimpleHashMap(number, seconds);
            if (result == 0 && seconds > 6) {
                MainJFrame.jTextFieldCostResult.setText(ERROR_NO_PREFIX);
            } else {
                MainJFrame.jTextFieldCostResult.setText(Integer.toString(result) + " ₽");
            }
        } catch (NumberFormatException e) {
            MainJFrame.jTextFieldCostResult.setText(ERROR_IN_SECONDS);
        }
    }//GEN-LAST:event_jButtonCountUsingSimpleHashMapActionPerformed

    private void jButtonSaveInFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveInFileActionPerformed
        try {
            if (saveJFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                String fileName = saveJFileChooser.getSelectedFile().getPath();
                String result = MainJFrame.jTextAreaOutputTheData.getText();
                try (PrintWriter out = new PrintWriter(fileName)) {
                    out.printf(result);
                    MainJFrame.jTextFieldCostResult.setText(FINAL_MESSAGE);
                    MainJFrame.jTextFieldOutput.setText(fileName);
                } catch (Exception ex) {
                    MainJFrame.jTextFieldCostResult.setText(ERROR_NOT_SAVE);
                }
            }
        } catch (HeadlessException e) {
            SwingUtils.showErrorMessageBox(e);
        }
    }//GEN-LAST:event_jButtonSaveInFileActionPerformed

    private void jButtonChoseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChoseFileActionPerformed
        try {
            if (openJFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                StringBuilder text = new StringBuilder();
                try (Scanner scanner = new Scanner(new File(openJFileChooser.getSelectedFile().getPath()), "UTF-8")) {
                    while (scanner.hasNext()) {
                        text.append(scanner.nextLine()).append(PARAGRAPH);
                    }
                    MainJFrame.jTextAreaOutputTheData.setText(text.toString());
                    String fileName = openJFileChooser.getSelectedFile().getAbsolutePath();
                    MainJFrame.jTextFieldFileUploadPath.setText(fileName);
                } catch (Exception ex) {
                    MainJFrame.jTextFieldCostResult.setText(ERROR_NO_DATA);
                }
            }
        } catch (HeadlessException e) {
            SwingUtils.showErrorMessageBox(e);
        }
    }//GEN-LAST:event_jButtonChoseFileActionPerformed

    private void jButtonLoadDataUsingSimpleHashMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadDataUsingSimpleHashMapActionPerformed
        tariffsSHM = new TariffsSHM();
        String data = MainJFrame.jTextAreaOutputTheData.getText();
        tariffsSHM.loadUsingSimpleHashMap(data);
    }//GEN-LAST:event_jButtonLoadDataUsingSimpleHashMapActionPerformed

    private void jButtonWithdrawDataUsingSimpleHashMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWithdrawDataUsingSimpleHashMapActionPerformed
        MainJFrame.jTextAreaOutputTheData.setText("");
        String result = tariffsSHM.withdrawUsingSimpleHashMap();
        MainJFrame.jTextAreaOutputTheData.setText(result);
    }//GEN-LAST:event_jButtonWithdrawDataUsingSimpleHashMapActionPerformed

    private void jButtonLoadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadDataActionPerformed
        tariffs = new Tariffs();
        String data = MainJFrame.jTextAreaOutputTheData.getText();
        tariffs.load(data);
    }//GEN-LAST:event_jButtonLoadDataActionPerformed

    private void jButtonWithdrawDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWithdrawDataActionPerformed
        MainJFrame.jTextAreaOutputTheData.setText("");
        String result = tariffs.withdraw();
        MainJFrame.jTextAreaOutputTheData.setText(result);
    }//GEN-LAST:event_jButtonWithdrawDataActionPerformed

    private void jButtonCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCountActionPerformed
        MainJFrame.jTextFieldCostResult.setText(EMPTY);
        try {
            int seconds = Integer.parseInt(MainJFrame.jTextFieldNumberOfSeconds.getText());
            String number = MainJFrame.jTextFieldPhoneNumber.getText();
            int result = tariffs.calculateCost(number, seconds);
            if (result == 0 && seconds > 6) {
                MainJFrame.jTextFieldCostResult.setText(ERROR_NO_PREFIX);
            } else {
                MainJFrame.jTextFieldCostResult.setText(Integer.toString(result) + " ₽");
            }
        } catch (NumberFormatException e) {
            MainJFrame.jTextFieldCostResult.setText(ERROR_IN_SECONDS);
        }
    }//GEN-LAST:event_jButtonCountActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String key = MainJFrame.jTextFieldKey.getText();
        String name = MainJFrame.jTextFieldName.getText();
        String cost = MainJFrame.jTextFieldCost.getText();
        boolean result = tariffs.add(key, name, Integer.parseInt(cost));
        if(result){
            MainJFrame.jTextFieldCostResult.setText("Record added");
        }else{
            MainJFrame.jTextFieldCostResult.setText("Record  already exists");
        }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonAddUsingSHMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUsingSHMActionPerformed
        String key = MainJFrame.jTextFieldKey.getText();
        String name = MainJFrame.jTextFieldName.getText();
        String cost = MainJFrame.jTextFieldCost.getText();
        boolean result = tariffsSHM.add(key, name, Integer.parseInt(cost));
        if(result){
            MainJFrame.jTextFieldCostResult.setText("Record added");
        }else{
            MainJFrame.jTextFieldCostResult.setText("Record  already exists");
        }
    }//GEN-LAST:event_jButtonAddUsingSHMActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        String key = MainJFrame.jTextFieldKey.getText();
        boolean result = tariffs.remove(key);
        if(result){
            MainJFrame.jTextFieldCostResult.setText("Record removed");
        }else{
            MainJFrame.jTextFieldCostResult.setText("No record exists");
        }
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonRemoveUsingSHMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveUsingSHMActionPerformed
        String key = MainJFrame.jTextFieldKey.getText();
        boolean result = tariffsSHM.remove(key);
        if(result){
            MainJFrame.jTextFieldCostResult.setText("Record removed");
        }else{
            MainJFrame.jTextFieldCostResult.setText("No record exists");
        }
    }//GEN-LAST:event_jButtonRemoveUsingSHMActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        String key = MainJFrame.jTextFieldKey.getText();
        String name = MainJFrame.jTextFieldName.getText();
        String cost = MainJFrame.jTextFieldCost.getText();
        boolean result = tariffs.change(key, name, Integer.parseInt(cost));
        if(result){
            MainJFrame.jTextFieldCostResult.setText("Record changed");
        }else{
            MainJFrame.jTextFieldCostResult.setText("No record exists");
        }
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jButtonChangeUsingSHMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeUsingSHMActionPerformed
        String key = MainJFrame.jTextFieldKey.getText();
        String name = MainJFrame.jTextFieldName.getText();
        String cost = MainJFrame.jTextFieldCost.getText();
        boolean result = tariffsSHM.change(key, name, Integer.parseInt(cost));
        if(result){
            MainJFrame.jTextFieldCostResult.setText("Record changed");
        }else{
            MainJFrame.jTextFieldCostResult.setText("No record exists");
        }
    }//GEN-LAST:event_jButtonChangeUsingSHMActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonAddUsingSHM;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonChangeUsingSHM;
    private javax.swing.JButton jButtonChoseFile;
    private javax.swing.JButton jButtonCount;
    private javax.swing.JButton jButtonCountUsingSimpleHashMap;
    private javax.swing.JButton jButtonLoadData;
    public static javax.swing.JButton jButtonLoadDataUsingSimpleHashMap;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonRemoveUsingSHM;
    public static javax.swing.JButton jButtonSaveInFile;
    private javax.swing.JButton jButtonWithdrawData;
    public static javax.swing.JButton jButtonWithdrawDataUsingSimpleHashMap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTextArea jTextAreaOutputTheData;
    private static javax.swing.JTextField jTextFieldCost;
    public static javax.swing.JTextField jTextFieldCostResult;
    public static javax.swing.JTextField jTextFieldFileUploadPath;
    private static javax.swing.JTextField jTextFieldKey;
    private static javax.swing.JTextField jTextFieldName;
    public static javax.swing.JTextField jTextFieldNumberOfSeconds;
    public static javax.swing.JTextField jTextFieldOutput;
    public static javax.swing.JTextField jTextFieldPhoneNumber;
    // End of variables declaration//GEN-END:variables
}
